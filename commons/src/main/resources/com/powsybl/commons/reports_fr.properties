core.cgmes.conversion.applyingPostprocessors = Application de post-traitements.
core.cgmes.conversion.applyingPreprocessors = Application des pré-traitements.
core.cgmes.conversion.applyingProcessor = Application du traitement : ${processorName}.
core.cgmes.conversion.badLoadTapChangingCapabilityTapChanger = Le changeur de prises ${tapChangerId} a sa régulation activée mais n'a pas la capacité de régler en charge. Sa capacité de régler en charge a été changée à vrai.
core.cgmes.conversion.badTargetDeadbandRegulatingControl = L'équipement ${equipmentId} régule avec une mauvaise bande morte cible : ${targetDeadband}.
core.cgmes.conversion.badVoltageTargetValueRegulatingControl = L'équipement ${equipmentId} régule avec une valeur cible de tension incorrecte : ${targetValue}.
core.cgmes.conversion.buildingMappings = Création de correspondances.
core.cgmes.conversion.CGMESConversion = Importation du (des) fichier(s) CGMES avec le nom de base '${basename}'.
core.cgmes.conversion.CGMESTriplestore = Lecture du Triplestore CGMES.
core.cgmes.conversion.convertingElementType = Conversion de ${elementType}.
core.cgmes.conversion.danglingLineDisconnectedAtBoundaryHasBeenDisconnected = La ligne frontière ${danglingLineId} était connectée du côté du réseau et déconnectée du côté de la frontière. Elle a également été déconnectée du côté du réseau.
core.cgmes.conversion.dcLineSegmentNotInTwoDCIslandEnd = DCLineSegment: ${dcLineSegmentId} n'a pas 2 DCIslandEnd.
core.cgmes.conversion.ExportedCgmesId = Identifiant de modèle exporté par CGMES : ${cgmesId} pour le sous-ensemble ${cgmesSubset} du réseau ${networkId}.
core.cgmes.conversion.fixingDanglingLinesIssues = Correction des problèmes liés aux lignes frontières.
core.cgmes.conversion.importedCgmesNetwork = Le réseau CGMES ${networkId} a été importé.
core.cgmes.conversion.inconsistentNumberOfConverters = DCIsland fait d'ACDCConverters: ${converterIds} a une configuration POINT_TO_POINT mais n'a pas le même nombre de convertisseurs du même type de chaque côté.
core.cgmes.conversion.inconsistentProfilesTPRequired = Le réseau ${networkId} contient des informations en node/breaker. Les références aux noeuds topologiques dans les fichiers SSH/SV ne seront pas valides si le profil TP n'est pas exporté.
core.cgmes.conversion.invalidAngleVoltageBus = Le noeud ${nodeId} sur le site ${substation}, poste ${voltageLevel}, bus ${bus} a une valeur invalide pour la tension et/ou l'angle. L'amplitude de la tension est ${voltage}, l'angle est ${angle}.
core.cgmes.conversion.invalidAngleVoltageNode = La valeur de la tension et/ou de l'angle du noeud ${nodeId} n'est pas valide. L'amplitude de la tension est ${voltage}, l'angle est ${angle}.
core.cgmes.conversion.missingMandatoryAttribute = Impossible de récupérer l'attribut obligatoire : ${attributeName} de ${objectClass} : ${objectId}.
core.cgmes.conversion.multipleUnpairedDanglingLinesAtSameBoundary = Plusieurs lignes frontières non appairées ont été connectées du même côté de la frontière. Ajustement de l'injection originale de (${p0}, ${q0}) à (${p0Adjusted}, ${q0Adjusted}) pour la ligne frontière ${danglingLineId}.
core.cgmes.conversion.nominalVoltageIsZero = Poste ignoré : ${voltageLevelId} car sa tension nominale est égale à 0.
core.cgmes.conversion.notVisitedDcEquipment = DCEquipment ${dcEquipmentId} est enlevé car il ne peut être rattaché à aucun DCIsland.
core.cgmes.conversion.removingUnattachedHvdcConverterStation = La station de conversion HVDC ${converterId} est supprimée car elle n'a pas de ligne HVDC de rattachement.
core.cgmes.conversion.settingVoltagesAndAngles = Configuration des tensions et des angles.
core.cgmes.conversion.substationMapping = ${substationMappingSize} sites connectés par des transformateurs ont été fusionnés dans l'IIDM. Map du site d'origine en IIDM : ${mapAsString}.
core.cgmes.conversion.unexpectedPointToPointDcConfiguration = DCIsland fait d'ACDCConverters: ${converterIds} a une DCConfiguration inattendue en POINT_TO_POINT : ${numberOfConverterPairs} convertisseur(s)/${numberOfLines} ligne(s).
core.cgmes.conversion.unsupportedDcConfiguration = DCIsland fait d'ACDCConverters: ${converterIds} a une DCConfiguration inattendue ${dcConfiguration}.
core.cgmes.conversion.voltageLevelMapping = ${voltageLevelMappingSize} postes connectés par des organes de coupure ont été fusionnés dans l'IIDM. Map du poste d'origine en IIDM : ${mapAsString}.
core.cgmes.model.CGMESFileRead = Fichier d'instance ${instanceFile}.
core.commons.missingKey = Template de message non trouvé pour la clé ''{0}''.
core.dynasim.dynamicSimulationTool = Outils de simulation dynamique.
core.dynasim.groovyDynamicModels = Fournisseur de modèles dynamiques en groovy.
core.dynasim.groovyEventModels = Fournisseur de modèles d'événement en groovy.
core.dynasim.groovyOutputVariables = Fournisseur de variables de sortie en groovy.
core.iidm.modification.busbarSectionNotFound = Section de jeu de barres ${busbarSectionId} introuvable dans le poste ${voltageLevelId}.
core.iidm.modification.busbarSectionsWithoutPosition = Des sections de jeu de barres n'ont pas de position sur le poste ${voltageLevelId}.
core.iidm.modification.busNotFound = Bus ${busId} introuvable dans le poste ${voltageLevelId}.
core.iidm.modification.busOrBusbarSectionVoltageLevelNotFound = Le poste associé à ${busOrBusbarSectionId1} ou ${busOrBusbarSectionId2} est introuvable.
core.iidm.modification.connectableConnected = L'élément ${identifiable} a été connecté sur tous ses côtés.
core.iidm.modification.connectableConnectedSide = L'élément ${identifiable} a été connecté sur son côté ${side}.
core.iidm.modification.connectableCreated = Le nouvel élément ${connectableId} de type ${connectableType} a été créé.
core.iidm.modification.connectableNotConnected = L'élément ${identifiable} n'a PAS été connecté sur tous ses côtés.
core.iidm.modification.connectableNotConnectedSide = L'élément ${identifiable} n'a PAS été connecté sur son côté ${side}.
core.iidm.modification.connectableNotFound = Élément ${connectableId} introuvable.
core.iidm.modification.connectableNotInVoltageLevel = L'élément ${connectableId} n'est pas dans le poste ${voltageLevelId}.
core.iidm.modification.connectableNotSupported = L'élément ${connectableClassName} n'est pas supporté.
core.iidm.modification.ConnectableRemoved = L'élément ${connectableId} a été supprimée.
core.iidm.modification.countLowerThanMin = ${type} doit être >= ${min}.
core.iidm.modification.failToInsertBusbarSection = Impossible d'ajouter une section de jeu de barres sur le poste ${voltageLevelId} avant ou après la section de jeu de barres ${busbarSectionId} : aucune section de jeu de barres voisine n'a été trouvée pour effectuer l'opération.
core.iidm.modification.generatorLocalRegulation = Le groupe ${generatorId} est passé du réglage distant au réglage local.
core.iidm.modification.HvdcNotFound = Ligne HVDC ${hvdcLineId} introuvable.
core.iidm.modification.ignoredPositionOrder = Le poste ${voltageLevelId} est en BUS_BREAKER. La position d'ordre ${positionOrder} est ignorée.
core.iidm.modification.ignoredShuntInAnotherVoltageLevel = Le moyen de compensation statique ${shuntId} a été ignoré car aucun des postes de ses LCC ne correspond à son poste (${voltageLevelId1} or ${voltageLevelId2}).
core.iidm.modification.ignoredVscShunts = Les moyens de compensation statiques ${shuntsIds} sont ignorés car les stations de conversion ${converterStationId1} et ${converterStationId2} sont des VSC.
core.iidm.modification.InternalConnectionRemoved = La connexion interne a été supprimée entre les noeuds ${node1} et ${node2}.
core.iidm.modification.limitsLost = Limites temporaires présentes des deux côtés de la ligne ${lineId} : elles sont ignorées.
core.iidm.modification.lineCreated = La ligne ${lineId} a été créée.
core.iidm.modification.lineNotFound = Ligne ${lineId} introuvable.
core.iidm.modification.lineRemoved = La ligne ${lineId} a été supprimée.
core.iidm.modification.lostDanglingLineExtensions = Les extensions [${extensions}] de la ligne frontière ${danglingLineId} seront perdues.
core.iidm.modification.lostThreeWindingsTransformerAliases = Les alias [${aliases}] des transformateurs à trois enroulements ${threeWindingsTransformerId} seront perdus.
core.iidm.modification.lostThreeWindingsTransformerExtensions = Les extensions [${extensions}] du transformateur à trois enroulements ${threeWindingsTransformerId} seront perdues.
core.iidm.modification.lostThreeWindingsTransformerProperties = Les propriétés [${properties}] du transformateur à trois enroulements ${threeWindingsTransformerId} seront perdues.
core.iidm.modification.lostTieLineExtensions = Les extensions [${extensions}] de l'interconnexion ${tieLineId} seront perdues.
core.iidm.modification.lostTwoWindingsTransformerAliases = Les alias [${aliases}] du transformateur à deux enroulements ${twoWindingsTransformerId} seront perdus.
core.iidm.modification.lostTwoWindingsTransformerExtensions = Les extensions [${extensions}] du transformateur à deux enroulements ${twoWindingsTransformerId} seront perdues.
core.iidm.modification.lostTwoWindingsTransformerOperationalLimitsGroups = Les ensembles de limites [${limits}] du transformateur à deux enroulements ${twoWindingsTransformerId} seront perdus.
core.iidm.modification.lostTwoWindingsTransformerProperties = Les propriétés [${properties}] du transformateur à deux enroulements ${twoWindingsTransformerId} seront perdues.
core.iidm.modification.moveBayBusbarSectionConnectable = Impossible de déplacer le départ pour l'élément ${connectableId} car c'est une section de jeu de barres.
core.iidm.modification.networkMismatch = Les réseaux passés en paramètres et pour l'ajout d'injection sont différents. L'injection '${injectionId}' de type ${identifiableType} a été ajoutée puis supprimée.
core.iidm.modification.networkModificationDryRun-failure = Test à blanc : échec pour la modification de réseau ${networkModification} sur le réseau '${networkNameOrId}'. Problème : ${dryRunError}.
core.iidm.modification.networkModificationDryRun-success = Test à blanc : succès pour la modification de réseau ${networkModification} sur le réseau '${networkNameOrId}'.
core.iidm.modification.networkModificationDryRun = Test à blanc : test de faisabilité de la modification de réseau ${networkModification} sur le réseau '${networkNameOrId}'.
core.iidm.modification.newConnectableAdded = Le nouveau départ de poste rattaché à ${connectableId} de type ${connectableType} a été créé et connecté au poste ${voltageLevelId} sur la section de jeu de barres ${bbsId} avec un sectionneur et sur ${parallelBbsNumber} sections de jeu de barres en parallèle avec un sectionneur ouvert.
core.iidm.modification.newCouplingDeviceAdded = Un nouveau dispositif de couplage a été créé sur le poste ${voltageLevelId}. Il connecte ${busOrBbsId1} avec ${busOrBbsId2} via des sectionneurs fermés.
core.iidm.modification.newLineOnLineCreated = Une nouvelle ligne ${newLineId} a été créée et connectée en piquage sur les lignes ${line1Id} et ${line2Id} pour remplacer la ligne ${originalLineId}.
core.iidm.modification.noBusbarSectionPositionExtension = Aucune extension trouvée pour la section de jeu de barres ${bbsId}, seul un sectionneur a été créé.
core.iidm.modification.noConnectablePositionExtensions = Aucune extension "ConnectablePosition" n'a été trouvée sur le poste ${voltageLevel}. Pas de création d'extension "ConnectablePosition" sur le nouveau départ ${connectableId}.
core.iidm.modification.noCouplingDeviceOnSameBusOrBusbarSection = Aucun dispositif de couplage ne peut être créé sur le même bus ou section de jeu de barres (${busOrBbsId}).
core.iidm.modification.noTeePointAndOrTappedVoltageLevel = Impossible de trouver le point de piquage et les postes en dérivation des lignes ${line1Id}, ${line2Id} et ${line3Id}.
core.iidm.modification.notFoundBusbarSection = Section de jeu de barres ${identifiableId} introuvable.
core.iidm.modification.notFoundBusOrBusbarSection = Bus ou section de jeu de barres ${identifiableId} introuvable.
core.iidm.modification.notFoundShunt = Résistance en dérivation ${shuntId} introuvable.
core.iidm.modification.noVoltageLevelInCommon = Les lignes ${line1Id} et ${line2Id} devraient avoir exactement un seul poste en commun à leurs extrémités.
core.iidm.modification.openDisconnectorsAdded = ${nbOpenDisconnectors} sectionneurs ouverts créés sur des sections de jeu de barres en parallèle sur le poste ${voltageLevelId}.
core.iidm.modification.plannedIdentifiableDisconnected = L'élément ${identifiable} a été déconnecté (déconnexion planifiée) de tous ses côtés.
core.iidm.modification.plannedIdentifiableDisconnectedSide = L'élément ${identifiable} a été déconnecté (déconnexion planifiée) de son côté ${side}.
core.iidm.modification.plannedIdentifiableNotDisconnected = L'élément ${identifiable} n'a PAS été déconnecté (déconnexion planifiée) de tous ses côtés.
core.iidm.modification.plannedIdentifiableNotDisconnectedSide = L'élément ${identifiable} n'a PAS été déconnécté (déconnexion planifiée) de son côté ${side}.
core.iidm.modification.positionAdjacentBbsIncoherent = Les positions des tronçons des jeux de barres adjacents ne laissent pas d'espace pour de nouvelles positions sur la section de jeu de barres ${bbsId}.
core.iidm.modification.positionOrderAlreadyTaken = La position d'ordre ${positionOrder} est déjà prise. Pas d'extension de position créée.
core.iidm.modification.positionOrderTooHigh = La position d'ordre ${positionOrder} est trop élevée (>${maxValue}). Pas d'extension de position créée.
core.iidm.modification.positionOrderTooLow = La position d'ordre ${positionOrder} est trop basse (<${minValue}). Pas d'extension de position créée.
core.iidm.modification.removeBayBusbarSectionConnectable = Impossible de supprimer le départ de l'élément ${connectableId} car c'est une section de jeu de barres.
core.iidm.modification.removedTieLineAndAssociatedDanglingLines = Suppression de l'interconnexion ${tieLineId}, des lignes frontières associées ${danglingLineId1} et ${danglingLineId2} et de la clef de correspondance ${pairingKey}.
core.iidm.modification.removedTieLine = Suppression de l'interconnexion ${tieLineId} et de la clef de correspondance ${pairingKey}.
core.iidm.modification.RemoveFeederBayAborted = La suppression du départ de ${connectableId} ne peut pas se propager plus loin que le noeud ${node}, car il est connecté à ${otherConnectableId}.
core.iidm.modification.removeHvdcLine = La ligne HVDC ${hvdcLineId} a été supprimée.
core.iidm.modification.removeLccConverterStation = La station de conversion LCC ${lccConverterStationId} a été supprimée.
core.iidm.modification.removeShuntCompensator = Le moyen de compensation statique ${shuntCompensatorId} a été supprimé.
core.iidm.modification.removeSubstation = Le site ${substationId} et ses postes ont été supprimés.
core.iidm.modification.removeVoltageLevel = Le poste ${voltageLevelId}, ses équipements ainsi que les quadripôles auxquels il est connecté ont été supprimés.
core.iidm.modification.removeVscConverterStation = La station de conversion VSC ${vscConverterStationId} a été supprimée.
core.iidm.modification.replaced-3t2w-by-t3w = Remplacement de 3 transformateurs à deux enroulements par un transformateur à trois enroulements.
core.iidm.modification.replaced-t3w-by-3t2w = Remplacement d'un transformateur à trois enroulements par 3 transformateurs à deux enroulements.
core.iidm.modification.scalingApplied = Mise à l'échelle réussie de ${identifiableType} en utilisant le mode ${mode} et le type ${type} avec la variation ${asked}. La variation effectuée est ${done}.
core.iidm.modification.substationNotFound = Site ${substationId} introuvable.
core.iidm.modification.substationRemoved = Le site ${substationId} a été supprimé.
core.iidm.modification.SwitchRemoved = L'organe de coupure ${switchId} a été supprimé.
core.iidm.modification.SymmetricalTopologyCreated = Nouvelle topologie symétrique sur le poste ${voltageLevelId}: création de ${busbarCount} bus ou jeux de barres avec ${sectionCount} sections chacun.
core.iidm.modification.threeWindingsTransformerCreated = Transformateur à trois enroulements ${threeWindingsTransformerId} créé.
core.iidm.modification.threeWindingsTransformerRemoved = Le transformateur à trois enroulements ${threeWindingsTransformerId} a été supprimé.
core.iidm.modification.twoWindingsTransformerCreated = Transformateur à deux enroulements ${twoWindingsTransformerId} créé.
core.iidm.modification.twoWindingsTransformerRemoved = Le transformateur à deux enroulements ${twoWindingsTransformerId} a été supprimé.
core.iidm.modification.undefinedFictitiousSubstationId = Pour créer un site fictif, un ID doit être renseigné.
core.iidm.modification.undefinedPercent = Le pourcentage doit être défini.
core.iidm.modification.undefinedSwitchKind = Les types des organes de coupures doivent être définis.
core.iidm.modification.unexpectedDifferentVoltageLevels = ${busOrBbsId1} et ${busOrBbsId2} sont sur des postes différents.
core.iidm.modification.unexpectedIdentifiableType = L'élément ${identifiableId} a un type inattendu : ${identifiableType}.
core.iidm.modification.unexpectedNegativePositionOrder = Le numéro de position de rattachement au poste ${voltageLevelId} est négatif (${positionOrder}).
core.iidm.modification.unexpectedNullPositionOrder = Le numéro de position de rattachement au poste ${voltageLevelId} en node/breaker est nul.
core.iidm.modification.unexpectedSwitchKindsCount = Nombre de types d'organes de coupure inattendu : ${switchKindsCount} contre ${expectedSwitchKindsCount} attendus.
core.iidm.modification.unplannedIdentifiableDisconnected = L'élément ${identifiable} a été déconnecté (déconnexion non planifiée) de tous ses côtés.
core.iidm.modification.unplannedIdentifiableDisconnectedSide = L'élément ${identifiable} a été déconnecté (déconnexion non planifiée) de son côté ${side}.
core.iidm.modification.unplannedIdentifiableNotDisconnected = L'élément ${identifiable} n'a PAS été déconnecté (déconnexion non planifiée) de tous ses côtés.
core.iidm.modification.unplannedIdentifiableNotDisconnectedSide = L'élément ${identifiable} n'a PAS été déconnecté (déconnexion non planifiée) de son côté ${side}.
core.iidm.modification.unsupportedIdentifiableType = Type ${identifiableType} non géré pour l'élément ${identifiableId}.
core.iidm.modification.voltageConnectedOnLine = Le poste ${voltageLevelId} connecté aux lignes ${line1Id} et ${line2Id} remplace la ligne ${originalLineId}.
core.iidm.modification.voltageLevelCreated = Poste ${voltageLevelId} créé.
core.iidm.modification.voltageLevelNotFound = Poste ${voltageLevelId} introuvable.
core.iidm.modification.voltageLevelRemoved = Le poste ${vlId} a été supprimé.
core.iidm.modification.voltageLevelRemovingEquipmentsLeft = Le poste ${vlId} contient toujours des équipements.
core.iidm.modification.wrongSwitchKind = Les organes de coupures doivent être de type DISCONNECTOR ou BREAKER.
core.iidm.network.acDcConverterControlInvalidTargetVDc = Convertisseur AC/DC converter '${id}': la targetVdc est invalide.
core.iidm.network.acDcConverterControlModeNotSet = Convertisseur AC/DC '${id}': le controlMode n'est pas configuré.
core.iidm.network.acDcConverterControlTargetPInvalid = Convertisseur AC/DC '${id}': la targetP est invalide.
core.iidm.network.activePowerSetpointInvalid = '${id}': la valeur de la puissance active de consigne (${activePowerSetpoint}) est invalide.
core.iidm.network.alreadyConnectedTerminal = La borne de l'élément ${identifiable} est déjà connectée.
core.iidm.network.alreadyDisconnectedTerminal = La borne de l'élément ${identifiable} est déjà déconnectée.
core.iidm.network.export_test = Mock de l'export.
core.iidm.network.hvdcConverterModeInvalid = HVDC '${id}': le mode du convertisseur est invalide.
core.iidm.network.hvdcUndefinedLossFactor = Station de conversion HVDC '${id}': le facteur de pertes est invalide (valeur non définie).
core.iidm.network.IIDMValidation = Exécution de contrôles de validation sur le réseau IIDM ${networkId}.
core.iidm.network.importDataSource = Import de la donnée ${dataSource}.
core.iidm.network.InconsistentAliasTypes = Incohérence des types de l'alias '${alias}' entre celui de la ligne frontière ${danglingLineId1} (type=${type1}) et celui de la ligne frontière ${danglingLineId2} (type=${type2}). Perte de l'information du type.
core.iidm.network.InconsistentAliasValues = Incohérence des alias de type '${type}' entre celui de la ligne frontière ${danglingLineId1} (alias=${alias1}) et celui de la ligne frontière ${danglingLineId2} (alias=${alias2}). Les types sont respectivement renommés '${type}_1' et '${type}_2'.
core.iidm.network.InconsistentPropertyValues = Incohérence sur la propriété ${propertyName} entre ${danglingLineId1} (valeur=${propertyValue1}) et ${danglingLineId2} (valeur=${propertyValue2}). La propriété n'est pas ajoutée sur la ligne fusionnée.
core.iidm.network.invalidP0 = '${id}': p0 est invalide.
core.iidm.network.invalidQ0 = '${id}': q0 est invalide.
core.iidm.network.MoveCommonAlias = L'alias ${alias} présent sur les deux lignes frontières ${danglingLineId1} et ${danglingLineId2} est déplacé sur la ligne fusionnée.
core.iidm.network.PropertyOnlyOnOneSide = Incohérence sur la propriété {propertyName} entre le côté 1 (ligne frontière ${danglingLineId1}) et le côté 2 (ligne frontière ${danglingLineId2}) de la ligne fusionnée. Le côté ${side} n'a pas de valeur. La valeur '${propertyValue}' de l'autre côté est gardée.
core.iidm.network.ptcPhaseRegulationCannotBeEnabledWithoutLoadTapChanging = Transformateur '${id}': la régulation ne peut être activée sur un déphaseur qui ne peut réguler en charge.
core.iidm.network.ptcPhaseRegulationModeNotSet = Transformateur '${id}': le mode de régulation de la phase n'est pas configuré.
core.iidm.network.ptcPhaseRegulationNoRegulatedTerminal = Transformateur '${id}': la régulation du déphaseur est activée mais le terminal de régulation n'est pas configuré.
core.iidm.network.ptcPhaseRegulationRegulationValueNotSet = Transformateur '${id}': la régulation du déphaseur est activée mais la valeur de consigne n'est pas configurée.
core.iidm.network.ptcTargetDeadbandUndefinedValue = '${id}': valeur non définie pour la bande morte cible du déphaseur.
core.iidm.network.reactivePowerSetpointInvalidVoltageRegulatorOff = '${id}': la valeur de consigne de la puissance réactive (${reactivePowerSetpoint}) est invalide (la régulation de tension est inactive).
core.iidm.network.regulatingRtcBadTargetVoltage = Transformateur '${id}': la régulation du régleur est activée, mais la consigne de tension est incorrecte (${regulationValue}).
core.iidm.network.regulatingRtcNoRegulationMode = Transformateur '${id}': la régulation du régleur est activée, son mode de régulation est obligatoire.
core.iidm.network.regulatingRtcNoRegulationTerminal = Transformateur '${id}': la régulation du régleur est activée, son terminal de régulation est obligatoire.
core.iidm.network.regulatingRtcNoRegulationValue = Transformateur '${id}': la régulation du régleur est activée, sa valeur de régulation est obligatoire.
core.iidm.network.rtcRegulationCannotBeEnabledWithoutLoadTapChanging = Transformateur '${id}': la régulation ne peut pas être activée sur le régleur s'il ne peut régler en charge.
core.iidm.network.rtcTargetDeadbandUndefinedValue = Transformateur '${id}': la régulation du régleur est activée, mais sa bande morte cible n'a pas de valeur définie.
core.iidm.network.scTargetDeadbandUndefinedValue = Moyen de compensation statique '${id}' - la régulation est activée pour le moyen de compensation statique, mais la bande morte cible n'a pas de valeur définie.
core.iidm.network.svcReactivePowerSetpointInvalid = Compensaeur statique de puissance réactive '${id}': la valeur de consigne en puissance réactive (${reactivePowerSetpoint}) est invalide.
core.iidm.network.svcRegulationModeInvalid = Compensaeur statique de puissance réactive '${id}': le mode de régulation est incorrect.
core.iidm.network.svcVoltageSetpointInvalid = Compensaeur statique de puissance réactive '${id}': la valeur de consigne de tension (${voltageSetpoint}) est invalide.
core.iidm.network.tapPositionNotSet = Transformateur '${id}': le numéro de la prise n'est pas configuré.
core.iidm.network.temporaryLimitsButPermanentLimitUndefined = '${id}': la limite permanente est obligatoire si des limites temporaires sont définies.
core.iidm.network.testImportPostProcessor = Test du post-traitement d'import.
core.iidm.network.tooManyRegulatingControlEnabled = Transformateur '${id}': un seul changeur de prises actif est autorisé.
core.iidm.network.undefinedShuntSection = Moyen de compensation statique '${id}': le numéro de section courant n'est pas défini.
core.iidm.network.validationWarningBothRatioPhase = ${parent} a à la fois un régleur et un déphaseur.
core.iidm.network.validationWarningReactiveCapabilityCurveDuplicate = La coubre de capacité de réactif pour ${id} a une une duplication de points pour la puissance active ${p}.
core.iidm.network.voltageSetpointInvalidVoltageRegulatorOn = '${id}': la valeur de consigne de tension (${voltageSetpoint}) est invalide (la régulation de tension est active).
core.iidm.serde.extensionNotFound = Extension ${extensionName} introuvable.
core.iidm.serde.extensionsNotFound = Extensions introuvables.
core.iidm.serde.importedExtension = Extension ${extensionName} importée.
core.iidm.serde.importedExtensions = Extensions importées.
core.iidm.serde.importedNetwork = Le réseau ${networkId} est importé à partir du format ${format}.
core.iidm.serde.validationWarnings = Avertissements sur la validation.
core.iidm.serde.xiidmImportDone = Import XIIDM terminé.
core.timeseries.invalidVersionNumber = Le numéro de version pour une série temporelle versionnée ne doit pas être égal au numéro de version par défaut (${versionNumber}) ligne ${line}.
core.timeseries.timeseriesLoadingTime = ${tsNumber} séries temporelles chargées du fichier CSV en ${timing} ms.
core.ucte.activePowerUndefined = Noeud ${node}: la puissance active est indéfinie, valeur mise à 0.
core.ucte.epsilonLineReactance = ${lineId} - La réactance d'une ligne réelle doit être plus grande que 0.05 ohm (${reactance} ohm).
core.ucte.epsilonTransformerNominalPower = ${transformerId} - La valeur doit être positive, les valeurs vides ou nulles sont interdites (${nominalPower} ohm).
core.ucte.fixUcteLines = Correction des lignes UCTE.
core.ucte.fixUcteNodes = Correction des noeuds UCTE.
core.ucte.fixUcteRegulations = Corrections des régulations UCTE.
core.ucte.fixUcteTransformer = Corrections des transformateurs UCTE.
core.ucte.negativeLineResistance = ${lineId} - La résistance d'une ligne réelle ne peut pas être négative (${resistance} ohm).
core.ucte.nonZeroBusbarCouplerReactance = ${lineId} - La réactance d'un couplage de barres doit être nulle (${reactance} ohm).
core.ucte.nonZeroBusbarCouplerResistance = ${lineId} - La résistance du couplage de barres doit être nulle (${resistance} ohm).
core.ucte.nonZeroBusbarCouplerSusceptance = ${lineId} - La susceptance du couplage de barres doit être nulle (${susceptance} ohm).
core.ucte.PqUndefinedReactivePower = Noeud ${node} : la régulation en tension n'est pas activée mais la puissance réactive est indéfinie, valeur mise à 0.
core.ucte.PvUndefinedVoltage = Noeud ${node} : la régulation en tension est activée mais la tension de consigne est nulle (${voltageReference}), conversion du noeud en PQ.
core.ucte.UcteReading = Lecture du fichier de réseau UCTE.
core.ucte.UnsupportedTTBlock = Block TT non supporté.
core.ucte.wrongAngleRegulationDu = ${transfoId} - Pour les LTCs, la tension de régulation de l'angle d'un transformateur par prise ne doit pas être nulle. Sa valeur absolue ne doit pas être supérieure à 6% (${du} %).
core.ucte.wrongPhaseRegulationDu = ${transfoId} - Pour les LTCs, la tension de régulation de phase d'un transformateur par prise ne doit pas être nulle. Sa valeur absolue ne doit pas être supérieure à 6% (${du} %).
